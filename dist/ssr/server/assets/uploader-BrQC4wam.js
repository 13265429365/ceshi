import{defineComponent as x,ref as y,useSSRContext as q,resolveComponent as R,mergeProps as N,withCtx as C,createVNode as m,openBlock as P,createBlock as h,createCommentVNode as A,renderSlot as B}from"vue";import{c as L,a as D,N as O,_ as U}from"../server-entry.js";import{Loading as k,QSpinnerBars as z}from"quasar";import{useI18n as H}from"vue-i18n/dist/vue-i18n.runtime.node.mjs";import*as Q from"compressorjs";import{ssrRenderComponent as V,ssrRenderAttr as $,ssrRenderSlot as E}from"vue/server-renderer";const f=x({name:"uploaderIndex",__name:"uploader",props:{name:{type:String,default:"file"},respValue:{type:String,default:""},uploaderStyle:{type:Object,default:null},accept:{type:String,default:".jpg,.png,.gif,image/*"}},emits:["uploaded"],setup(r,{expose:l,emit:o}){const u=r,a=y(null),e=H(),g="http://192.168.5.135:3040",p=o,s=y(u.respValue),i=j=>{const _=j[0];_&&new Q.default(_,{quality:.1,success(v){const F=new FormData;F.append("file",v,v.name),L(F).then(w=>{s.value=w[0],p("uploaded",s.value)})}})},d=()=>{a.value.pickFiles()},t=()=>{k.show({spinner:z,spinnerColor:"secondary",spinnerSize:50,message:"Some important process is in progress. Hang on..."})},c=()=>{k.hide()},n=()=>{O("negative",e.t("refuse"))};l({upload:i,uploaderPickFiles:d});const S={props:u,uploaderRef:a,$i18n:e,baseURL:g,emit:p,respValue:s,upload:i,uploaderPickFiles:d,uploaderStartFunc:t,uploaderFinishFunc:c,uploaderRejectedFunc:n,get imageSrc(){return D}};return Object.defineProperty(S,"__isScriptSetup",{enumerable:!1,value:!0}),S}});function G(r,l,o,u,a,e,g,p){const s=R("q-uploader"),i=R("q-uploader-add-trigger");l(V(s,N({ref:"",flat:"",onAdded:e.upload,url:e.baseURL+"/upload","field-name":a.name,style:[a.uploaderStyle,{width:"100%",background:"transparent"}],accept:a.accept,multiple:!1,onStart:e.uploaderStartFunc,onFinish:e.uploaderFinishFunc,onRejected:e.uploaderRejectedFunc},u),{header:C((d,t,c,n)=>{if(!t)return[]}),list:C((d,t,c,n)=>{if(t)t(`<div${n}>`),r.$slots.default?t("<!---->"):(t(`<div class="text-center"${n}>`),t(V(i,null,null,c,n)),t(`<img${$("src",e.imageSrc(e.respValue))} alt=""${n}></div>`)),E(r.$slots,"default",{},null,t,c,n),t("</div>");else return[m("div",{onClick:d.pickFiles},[r.$slots.default?A("",!0):(P(),h("div",{key:0,class:"text-center"},[m(i),m("img",{src:e.imageSrc(e.respValue),alt:""},null,8,["src"])])),B(r.$slots,"default")],8,["onClick"])]}),_:3},o))}const b=f.setup;f.setup=(r,l)=>{const o=q();return(o.modules||(o.modules=new Set)).add("src/components/uploader.vue"),b?b(r,l):void 0};const W=U(f,[["ssrRender",G],["__file","uploader.vue"]]);export{W as u};
